package cn.mypro;

import com.alibaba.fastjson.JSONObject;
import com.sansec.util.Bytes;
import com.sansec.util.encoders.Base64;
import org.apache.http.HttpResponse;
import org.apache.http.HttpStatus;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicHeader;
import org.apache.http.protocol.HTTP;

import javax.imageio.ImageIO;
import java.awt.image.BufferedImage;
import java.io.*;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.util.*;

public class Run {

    static String path = "C:\\Users\\ASzsy\\Desktop\\gawzp";
    public static final String URL = "http://172.16.40.34:7197/photo_feature_verify_internal";

    public static void main(String[] args) throws IOException {
        HashMap<String, String> map = new HashMap<>();
        map.put("220182199106114148","朱钰");
        map.put("231083199010266132","范涛");
        map.put("231222199007014047","李清香");
        map.put("231222199011124046","丁明璐");
        map.put("34222119870620251X","苏培玉");
        map.put("342222198802202831","王天龙");
        map.put("342222199410012056","张晓天");
        map.put("372925199101248316","柳杨");
        //map.put("410222199109214587","罗轶丹");
        map.put("410224199304164653","陈贺");
        map.put("411423199003296084","吕林霖");
        map.put("411481199008176974","娄甲甲");
        map.put("411723199612109092","杨旭");
        map.put("412721199310080093","邹华山");
        map.put("412825199305016792","贾俊毅");
        HashMap<String, String> features1 = new HashMap<>();
        features1.put("412721199310080093","CglzZW5zZWZhY2UQncQCIoAErW8jvquPkLyCfJi9L02iPYOrHL7M9hY98S+PPdgxDz1l3wC9vO8ePaiv7j2MQLI9qZYnvfS+nT2MtTQ9JqKUvRpHXb1ZaE+9/sTyvFQ4Lb1eRyA9A+g/vfet4T1WvPK9kF6uvbFI7z2qJqm9b1XEvdJmuLzCPRi8brmJvQ9AU71fh0498cfjPRXiRbt0fiw+i9CVulDBdLzmqUg9UEbsvYFZKj45jQ+99abXPaNAgD3EGAy+7MDxPW9A772CcpY9PU4qvRvoSD7m5W09OZxdPe6uAj3HwJa7tAzavTGbcL22frI9/gTCvTGU+D09EhE+C0RmPEx/FLsLThc+Y1ATvAkrE77kB8E85qnDu7Ct07yK+jM9QcbRPbblCD3EtA69tm2NvdTb9zzdrw68tNf1PO6Ob7yY75y9q05gPJ8vOr6IvkA9nO8rvKfokrsmY/49SIE7PVxbm7u+87w7jFxdvd32mz3nr3+8zNtpvcus+70WI509uyMPPj5svr1uKNk9TbwSvo61aT4wucm9ri7/PLZUrb0qtCK+B1KevELuQr0VSh4+UPnRvT4A0jwlsT08bKY/vTganz0lzZ+9yqnHPZle7L2pgQe+3Tz+PDFWz71QOD886iapPJE5cbxqPDc9TF2KvaVTsDtHZi2+KUPLPVrwPz3Fqle+ZO+vPYthIr4=");
        features1.put("231083199010266132","CglzZW5zZWZhY2UQncQCIoAEGhsyvI1+cz2NdYW94+cMvv1HObuB3rw9f+YFvpesoDsEbPK9fepBvT2+0r0fKBa9BaInPaqWhT0oEpi9u8AYPgJ/5j1hy967COQ0vT5Kx72IsW09PMELPmqsDDwyQD+8kq+nvNNGIr2DG5K8ogqnPXAmDD73GI68cfEkPrrwm73pNxM9Bgq4PRLW573DqBC98m5uO9KuPz0Uql295hXlveupl71SQd48tS6lvdOn2b2zGuy77/hKvKIaBD2746a9HXatPZeJ8L22HKs9o9PVvJvG1bymAE2+B0/6vejOAb42yGA9vUWMPW/Swj2Lhxs73TUuPt0pQD3b5IQ9EnOevelwq7xeUzk84WAtvX7MHT4A84s9RrOYvSK9u736bYQ9fwR2vROnILtYxbs9cOdGvbpNazz0k449vVz7vQo9Uj3AF3k9VeRAu4Xkkr2qnuk9OMlavl4OlTxm5xq9NksQPlyctz1dfLe9W6q5vWIZLr5hBZq8M9SEvFo9Mb3MlkW8ZfzQvV4EaD3dxWE9iwwFvS4Tmz6JfMQ81ew1vkzyUr3xdiQ9ZJcoPTlUfb2LcLW9ewfAPdiqKb7AIHe9z1ETvcC+LTkKZrW83lzFvRYe0j3LrnY9xOcLPjvb2z32UFi8EsyTPZfAFD4QPLU8iVQaPFHiO751kM28fiEMvRo64Ts=");
        features1.put("231222199007014047","CglzZW5zZWZhY2UQncQCIoAEBLSxvVDwwD1igeE82QcnvsyyBb2Kj+a6gVvMvQASCz0qxBa6gWqxvZapVT01IjG9xv4yvkA1i7z5pyg+3roXPc4DJz4dLCI9cvEXPMAQiTw8dwW9DsV+vYZyQrwlw509VXhzvNXzX72rnvS7mEkCve6pIr4Simq+9Au5PPSKejxGVui9nVVdvs6gDD52okG+FJ5PvqChUzxJFFu9IVWdPRdPAj4mcEY95tYKO03WET7L9vE89K1PPU8Bkj36FUK8mFbwPZL4kr2k5zQ9v8UFPtSPkjyenfm8DqU1PMFni73Jp949XTWBPRIQlT3qcIY9GJ2YPaGGSzoKK2U71HKgPWwlIjwz0ye+3p/RvfcqojyP2E0+M2JmPcrwgj3GUZu9u4PBu12ENr2u5jE90Y8OvoCZrDwBTCk81xh1vMylijyVY189XN9uvHWVpr35O68946DTPH97Kj5Fu1U7L8Z/PYUTS7146U49Tp+5vfk/BT3qtYs9oXwKvtxsJjuQCXM93o4fvquHsb3D6ua8jhk0voePGz5qBSO7KwCSPA+XSL0GG0W9aAyyvfiECb5AZvU7/+GhvKMHBD4QpDM9xFIyPQW+YT1RmpU8B/G8vTL3cj0jGLs9gyuhvUsk9D3Glq28eKDgvQcjWb2azJG90BIIPkTQ1Lo8Iiw+8epmvcTIDrw=");
        features1.put("231222199011124046","CglzZW5zZWZhY2UQncQCIoAEHhAAviP9db42ZW+9sdcnvtgDR7vcQsI6MkldPGY7OD0JOK68UTVJPVqnAz1AWAG+G4rEPVHXGD3iXG48rjyavQ1LCD3+ph0+JeS0vWPsDropGOu93oQ8vB6QKL1YdOq8f5AOPlQLJj7tfhy9fk5gvHpsBTyrIsW9eHhOvZi5sz2iQ7w9RPknPFwygz2dJ1S8FNFJPB+kxD3xf+K9IY2nOX77HT3tHDC+KPyqvDEilz3/7R09rSKBvUJUjD30+fa8xKZnvVHNaj2d5948MZIfPNERq71KqJY9NQ+CvYLRQz4J3L09bYaVu1djfT6j4349IZQYvv1e07zSjXa8XDrSO4DIYL5UCZm9u3S+vc4rrb1YLXo9X4atPM+bHb20bfE9WosmvSr7uz1/qEK98FcUPlfUgz1UXmu9Ew94vYV0CT4X8BY+MBgFvm7Bpr2EAWa9aL4HvleD2Tw/H/O8OUyavYlZ2j2I34Q9jPPMvbSs6D0QZgO9n5Yau/WovT0P8xO8FtxFPMsFHLzjrhA+5sYzPU+sAT5sCNG8ivS9PUO8pztQ2ck9O9gGvih0Kb0x94i9olsAPa6tpr3t2rk9DwYMPuvjnzxI+7032skLvo79Ij6Vv148a6nvPW28AT2H3Qc9Z81vPY1NRr7Lfe26k+R8vMtdWr39pi+8+ENIPG0izb0=");
        features1.put("34222119870620251X","CglzZW5zZWZhY2UQncQCIoAEnfENvcEX5DwFKZA8C2bfPIa9kjs5BNg9Nre8PSW5mj0xhck925guvS/aA77IbOe9E1oKO0Fu1L2CdQs+s9ymvXks1D1KD589Jue1PXHPLr6Lz9C9nKZxvY2tkLx375+9Jlg7vFIJDjwQo6I9ljO0vGm3PD6m8gY9BIu/vfDlW7xxSio90a2JPfJamrs0Jvo9UxvbPYNpmD0oGqu93qHZvXVaFb5Waos9qIIzvWjIrj32Mye9WjS1Op5kJT1v/B89Fo+/vUe/W75Om9+85p/yvcC5izzpbT69sfkPvmrXPbt93Ck+SCKPPXAB5TxnBbK9AS8BPR/skz07ZNa9bpZZvc92sL2MZ5m7W6VevW/MwrxIPrG9y8WwuEyeGD4X3Je9QE5mPaMgiL0VyNw9rWVkvFe1hb3/IAe9DETJvezAvDxSLJE942sVPnf6+b1vcE8+w701vpw+Ur0kOoC9Gc0XPM9W1DjBi+w9OWLxPfk1xT14CJO9Z8GCPcDvFb5KmZi7UEYTvgYuhj3DGq29hcFjPBtA970TuA692qiGPQfv/jzP0ha+PC6jvc5Ivz3ABMu9THV9Pba4c71thd49e3chvm0dCz6MIdK9BzM5vgD8bz3Ck3a92TuzPCQLoj0+jOI9BLaivPoVbr23mMI9kTgNPb3B2Tyzx4O9xy8YPQutX7w=");
        features1.put("342222198802202831","CglzZW5zZWZhY2UQncQCIoAExQJjvbkl3zw7kGS9LzCBvQOVXz3JfkG85NN7vf5Ffr0sLi28f9UVPikDGT6JrGU9Pg2sPU3iVj2v4SC8cEQovv2r7TvViZG8j3JoPhw/BD6/N6E9XjsfvesxML2repm9wvnrvfgg671Czza+t+m+PJ2VgD2Jxcc8ftwYvaF5SD6x+Hk8TXzIPUzjh70vlpQ9K5MlPVOyMjzP20M+uw8fPh0L8rwaeFk+5cBcvTkdpD3l4xw+3cTWvQeFqL1Faw+9984Qvh5hBT4Akz0+OoeNvRmRrT0GCzQ9alu7u2eter3KJJs8I/QUvgcKK7slSKE9Tp1wPOe8WD1QkaQ9+pcTvLI+TL30JBM9yucYvV6ESzqXJBc+6/hnPYyIYb2lR6Q8VqWgvZcbCz6Cn4e773WsPffou7zDNbo8o4A0PXpisTw2h7y9n63lvW0zMrl/Iu27r/8DvQxCET7PjwU8sHjTPSBJHz6/wQc+fM2pvVSDRT6alBe90kKevPCZ6D38/sS9VSOoPQWFT7211H691BdaPLDYRr0WWae9xjLyvX0RwL1Md0w9p6KTO4JSD721w8S8AIJyO/CHyj36PJ27tVb0vSrRX71QbAI+FDgjPaU5/7zFub28iQPWvNOwuT2heHy8eg+ePf0Zyz2FkS89xF+8OjvrW73D7SW8cxxYvkYhgTs=");
        features1.put("342222199410012056","CglzZW5zZWZhY2UQncQCIoAESJT0PHn2Bbtw9YA7iQGtvMW1Xb20jZQ9pT+uO3EQlTwSpsQ9IBqoPGqiS73xnWI7zsPVPC5A7j3fL/Y8+Lw3vvBJ0D1TfGy9omrtPXKfU7yAfXW8lVIGvtDALj1nZxg+ZEv/vd+/NzzRfx4+GF3bvUvkFT7Md6e8Rvw6PR/uvj3oxhW9hD5nPUjVyrxanQ69m7KOPEoM/DwPGqQ9gCECvhjLXLw56os83SeePZXP2r3uxRC8hxFnPXwriLxn1lS9zvdWvXkooz3La7C8cZ45vBt0QTzGzb299PhJPOytlj1l51K9h+06vRVPUr2kIxo8MRZmPnv7Wj0YloS7wdB8vc1xOb5Kf/88LNQMvhOlmz0vHrS9lQq1Pdw8pz17F0M+SmTXvHBMYT1tV5K9hu0GPkKl4L0zQYy83PhJvrfjxDo8yao8fFMAPqk897tE6Mk8ZRlSPYdnwb1+uWU94/V6Pdya87y08rk9inCEPSbZmj3sTMI8mCTtvVTTBr4DMxm9pVhVvTu3mTtqZiE+UVVnvXHHlb205ji+ViU5PYQeVb6Zldc84kOMPef5VT2aF1I9QDkuPiNDU76zG6W8tnBkPgBqYrtnxQ47fjVevt/Bh7wYqQE+9rBRPYVd7D1WJ2u9niGiOpSvpT2GyNA87QCCPYr+Db21aLe9BntzOqnIh70=");
        features1.put("372925199101248316","CglzZW5zZWZhY2UQncQCIoAE3q7vvNKc573eKT89svm+PF6Vu7t8rU+9xz7EPW9UhL2qtRw+PhUoPWv2D75TJg498DK8PTFzlz1jVZm95OoMvQNdAr160DY9a86tvRUPfDy2Z2u96R+rOi8Zqr3RcKS9LszNvWEtCD0JQ0Y9fIqbvJPKfzwrrQu9wiKtvXf7WjxxVm69WubhPTbfgj2djoq8sD9tPqMavDuYguk97cyHPsTJSb3x3jK9jvTKPAQngbsjBbe8WjF/vTXzl723MMM9wTxkPekfmb3inQy+SajYPTfVL725q1i908KXPUDdEz4UmZS8cMxkPWurMT6ZHPa7LgvTvI+hlzoE1Py9cxCjvMGz2b2AUDm9ZZIQvQ9MNT3Xb+M90FWLPLFgI77qtVi97YELvQwEmr0T+tm9fHwcPfduND5NgFg8imQpvq3j1T1Dgxs9piP0vY2Dmz3L0ig+ipwYPdXmGD5MmcI94tt3vFX3+r1jLmS+K15XPam0ijzzV1s96duoPMnDe76GZxq+dicMPUTthzxJC+Q9kol7veZWQr1e+FU9Ou/5vcPEMz0yQN+754y3PGLqnLyP/K69Z44Rvv8hkT3aKWg+QghGu6gTSL12Pc68GXESu5WnRb10NYs9Z1o/PZzeFj3EBjM9SPcCPZOmSL08JUu9Zxg2vUeqmD2Lbte916tlPd71Ar0=");
        features1.put("410224199304164653","CglzZW5zZWZhY2UQncQCIoAEFZogPdq29L3RhRG+JfdnvTy5yj3hdB09rbfcPerZcT3RNR6+9+OUvREHAD7KoBK+7F8dPZ/jur0wu5497SGMvR5UDj7XwBA8k1yKu/Xvej0Wieq8AiZfvX6aEj10tu+900fzPKhLnjxhkRm+0vEQvhtQj70Zu1C8HcSgPLXUlL3Mwv86cmxEPHc7VL3lJtY70/dzPLa5Nb0ezve9jlYUvRNvVbxlnKA8Z4RSPb5IpLx1CRo+0eWbvelXlD3OQsg7wT7SO9p4ebvU9Aa+8c8cPnEIIb008vG8L/SQPRpwVb4vRCI8yHydPGi11z1oENU7ph0ovRA+5T1jC7A9O/oUvcQ6Iz0EWiI+baoCPpPTwDpGoJS9IEC5vcsHUL57jA8+NpQ3vd+j9D2neSK9LWcsPq9aMb14dxE+LhR4vX9zB71gj/Q8XUQMPjQumLzaPIg7OhgwO0ZKET1LFpK7543vPRcEmjyxue27RP4vPo+I/734Vhm8F2HFPUgbBDtRphs++iuXvZwBTL2pdaw9rUoIvSMwr7wa21W+/9gBPhI5YD35sw4+63mIvTLQXD2E/P48844CPQFFG7xyoBW8RenivILdarz/Nu69gXhDvtpsAL4BgdY8B+RgO5l8azyiUhg+uJB8vTCLV71xdIq8BFhWvlxi4T0G/yK9Oyy2OkTEMz0=");
        features1.put("411423199003296084","CglzZW5zZWZhY2UQncQCIoAEHo4NPcL4ND2PGVS9qKh0PQb3PD6tYcA9ASZCvc5voj0H+3A8c0QCPU0drbyeKDY9/pjyPYX7rD3rmly7kDb6PcJTCj0QgIC9/vi9POZylzvnnLu9E+1Jvd65pLybgiW9JhWgPd9VAb3FPbs9KCDsvFPoj73VeYw9XnmuPX6YiL2YnrE9DodMPoPcRL7NgV08oi3vPZdRMj48tT09sjPhvSLbojwS0hW91zYQPtvG9b3UD9M9ol0NPFKADD0aeay9srUBPXHZhL3g1/a69pWAvZCKPL2d1h8+DNulu0EpsT3RufK8speYPHhfZr0TrVY+GnkdvXTQiTurdhe80UCzPeStZb0kjC68aUqUvT3jpj3KbbK9R4VlOyvZOz3YBow8cvyUPevHDb1Zz3U9JsNMPmVOFL3Ywnk9yhVDPQ2wYr0dlcW9f+yzPYAZkb0E/xc+MgupPJ6/2D2cZH0+dLQVvUq/2ztAa2o+jwcFvEHduD36Btc9XRksvcZRDb7X24y8HGF0PTjfCz46g1E5j5b1PPQrbbz4spu9XgvQPNFzoTx0YLk9wRKGPJwCEL1qmwA9Rn4pveBiwb3utQm+ReSUvfE0Hz4GXtE9P2IivBiGOj3/4Km9UnxePIGRBjzw15u94CdePWTDZj27Rji9ExD/PAjK4r2V8P29Y6iNvnG90L0=");
        features1.put("411481199008176974","CglzZW5zZWZhY2UQncQCIoAEdmGIPa/ovr18mz29J6DmPMSVw7wfjA6+K7sjvqoo0zxM1E68WqHKPbzi7bttCRw9fe7zvTK367xHpie94n0SPUL+zLw3Jvu9i7yqPWUqNj6rC8U9biXLvc2n+z2L5yO9/h8bPUdDGTs3gZe915IOu6W1ET7aJIo9zFWnPYo/rTw6wCi+9Yu9O7c3+b0+ONy97FKGvdnyXL0h3S09Krp+PbERVz3p/yI8cD3MvJ5g/71sy6y8G2YHvhALLr07czI8KgIqPeDuPz4IqKI9LxoXvvR/xz19g5A8+PYjvTmg472IGWu+wrvDPeOzmL21Edc8yqI8vePLdD1X4MQ9d5STvUmNRr36KXm9y/4evgzKjb2rm108YOdKOj15ZjwhRdk9OkOPvR6HtbyDtJk9UDlcvR66uj3D0EE81Hg6vdXPCD5GcI890zZaPPXwLD7NZHM9DDXbPcelIr0uVfo9azHOPCB9cL1nITw9sFqHPeSZ9D2le/o71SaEvR5vIj7wXP08mu3GvTXqjT2o/1k9yX+RPAUPVTv7NgC+hfPDu5YOsj32U/I9HACrPVgmkbwkHgE+vV7sPSYTmj07kQe+OM6iPe9DHD0cQza9M5uzvUqXPj6QED09UVoQvnogIb6C2LA9aL2hPXbpFz5I8W49P+gWPSI6db373FW9/qEpvk62zrw=");
        features1.put("411723199612109092","CglzZW5zZWZhY2UQncQCIoAE7HYuvR8/+rxmPC+9JX4SPZD2HD6jdBG8pcOyPLtMKz5Q3qO9faC8vQMopj1XTgK+iUUIvL/AiD0fnOo9afauPTwJZb2XFfs9YnbLPZnvcz2AW5K8UsUiPMfctj392bI7KS0BPDnUnL1+gEK6ra0tPO9lwb3clT49RAtEPt42ar3nAcO9lKesvUO3MzuhR5+8otEAvqhiFD0ZlAE8ul4ivkuExDq/RK89SGGRvfXa/708KuA8akF6OX+TnL2k+Z89IsE9PAIgI723mLG9GhQCPsA5hrw1Cc09D199vQxN8bw/etu8j3CmvdxoCb4SUh09bi7rPayxBr6Cwdo9OT/qvH2kZjoajDK9fvwnvv9iZL0c5x0+dQJjveGxlb2LDJs7KVkZPvA5OrtLDSk9M6RwvY4oET78Srg9vZ3zvdf4GL1/rBw8LE33vT70Mz48QG099ogHviGpyb1kt8o90aU1vix/Dz6neMc9SWFKPPfhejuJxXA9Ksvmu4hmr70ky4E9BMrSPAszDTvl1hM8VjxMOq/uTD5Rrq691DE/vAVwPL2Qo+E8PkDjvDzUXj4FiuA9+PFZPX7Szz3RpYE9QxnFPUPnFj5VhXK9a0zuvNtJpr0rggK+MxY4PsxvyT3NfXc8vMpAPaxT0j0R5/w8f8vJPRwRtT2A8De9AcruvVTrozw=");
        features1.put("220182199106114148","CglzZW5zZWZhY2UQncQCIoAE17RsvOmQdrzClvi9sNH5PNc2ObxDvIq9LfCQvSCnsjy34aO8fgT+PQaBaD4V+oo9AU4rvpnzWb1tn5w7vayovZ/Gcb1dl749QmJqPfiYi7xZmIS9O1L7vKQhmj2Zfy280kojPknC8rxfbhO+A5kjPSENEL2alcC9/DWLvYTsJz6Wv569h3IZvk5lJr7aBwi+ap3UvPxMwDxvMuM6BaNyPW5vWbtohQU98lHcvREfg73Q+5092thEPQg2aD1V6ds8QeDvOyFJNz17B0u8WOcBvXtdvrfZMt85wBWGPRX89TywSsc9QN0oPE4kTD2jIQk8BOadPddkML1ldks9dDewPRzAujucFMK9fQoNPmkgLD4I0jU+m9/aO2ak6T3yyNC84v0hvlLq0DyGUIE90mksvabheb1YCoe7vwPnva6Siz1T2X497w4pPLXL3D0PTqO9R5DvvB0tJj2MMjy9KYAJvXh84D0lJ5g8P8LbvZNKF74HJe09n+DuPXB2ybwUwiC9tE65PWP3RL2i/1C+vY7qvV4p9z0hN/29lTATPoU4sD0unK29FtUbPj5mHr4z78Y9QTDdvXkkET5Ya929HUUtPTJiuz36cPS9UAmEvUzR/DsQqZA9pwXOPQVseL1XKNe8an6HPHZfIL6F/h++GHSROtx6pT0TvQa9N6WLvTneoz0=");
        features1.put("412825199305016792","CglzZW5zZWZhY2UQncQCIoAEMILXPfUuzb2sJiw9HE6hvQwdLD7d4vU97KldPX37Nb4ACXm9pijsvEOBfLzdoLA8+NKYPXf/0bw//i+8WTUoPkYvKD5/Jd29rG2/vWCaET3ASAQ+r36jPU6L/b27WBO9ZNiCPMMyxr1R1mu9GRr7vTSHsD0eXbg8Gn9+Pc0QCb7Crwg+ekWPvJlqN7yjGP68Gk7bvFBj4LyTjFC88RJhvUxdZD0sgvy85j4vvU2tMj26OBY+TlRWPeE8oTt6E5I9CJMrvaaHcj1w+YA9yCcSPhvr+b1ei/+9HRpuPaQmnT2F9m49yhpDvfCatb38+ZK9lePBPV7xgT08JBa+hjbBvXcHtTxdUgU+xKiVvYHnab1W+wy+IuNmvrMvUD1fO3a9Mo4cPYg9TT7aVhy8tfLyvchhP72W+Au9tWRJPek29TtLG849+vKEvWmEjjykWFO9XYubPMyFfrx+wH87qsCuPbR3gr19q+G9eANzPIPYhTy/UEA8M0OAvYZlDz0uIXm+CdLRvILvlD30wbm9z7covTOCFD0Aadi9OofAvAkfJz2eYHe98msLPRasSj05x7I8+ADIPKsour13yeY81p8IPYboEb2AP6c9spEVPcVv9D0d3By9YsATvvpzrT1/L4I9k+CBPsDWkznMFJ48lX4LvmOwxD0iBR2+aFazvS10Bb4=");

        HashMap<String, String> features2 = new HashMap<>();
        features2.put("412721199310080093","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");
        features2.put("231083199010266132","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");
        features2.put("231222199007014047","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");
        features2.put("231222199011124046","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");
        features2.put("34222119870620251X","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");
        features2.put("342222198802202831","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");
        features2.put("342222199410012056","r/x0y2Rga3iarZxM3G9+2Z7h9BSi5GKqmxeO6qTuzc4kFOeAxOMscMkaUbTqc5+2LxWwUGHeFdStv5rErE1eKeutMmuaZVG3Pr4gQamEkoMFTe/GMdloy7efwWReuhUOlEzBzKG+gP0Vp4NVlrdbSSgS5ezQ2DUTXq732rnvqmESmVDHiwOrx+vizEXOnGdhD1R6M7z/pARf3asMot6u0hXTIX3NTgZNINo7w59tvzU5bLONnp/xPmzlLeWWLUvvJr+kp5FLlLNZn8qPLMRmvFFyzp40LClB5Ye2hIN2Gh58elgeVCPWYI1/qxfU5RFEMLtVtNDGF2Ul+uH7U+QeTMxaMZAw1Xw1GxkVgF1+o1/Dw3JZEvAd8YVUVBRfm30XrGLjD2pZngBWYLtXrk99vAOTpQrFqxcIz3rN1O4zoHCJ39WhVyu/0jeGi3+KzXfF9APFU0ziRCLsjtjy6UoTgOftp1WMOQdBfEPnDOv07DpNfAJHV5DzyBNGHZI6p3/ywjrz9RdmDtD5ZpUlCBHB6oaKDAfYWEiPhwjshxuJSSdzLg8uqX87tQ7DL3EK27BG8t8U0jQPryLYF++xSj26cZebmR2YOqr7Cfdo/SRmw8E3UXcJVqQYmuXWQxieVANq8qjmMB7RGLpBDD5OnlonV2mQ6JgDWxRHfEjyZv0qWYo+55b3sPWvdtAa2rnXffi8Jw6xrlDA/Y8rvmIZZKPf5HlOaSwc5ZuL+hNv9F7vO2R4EJAvho1B/rGoTWT1wZjjrgYmV3Lenh8JdaK/o1zQ7yBApwvDQaET5mwbNrJTHoVNJ1EcojQi4JRWfSaCE3admZspu0JoO+oEGxpPHS1XkCFEZtfsKQPJxFk4aclUU86hev8muh35HNtlGyYohFf9ODMQj8lq4PXFFzcn+i7w9V51wDUm7roRtS1XcXSOZ4IyVLJTfPGN9Ox+jcH9wSEwpvH8QGsNLYRx2Zi8btp6XrGJ5qjcAL+q4AJsUGFTfR6O4qr+wU2S8uw0k+f8GWUAU0iXbBDoTSs7fSx7k1S8sAd3lLDKIsR+7OVtqg+ObPxCcIQVLmSycTppawCi73/MPy3K+P4EcNrrSdihgo8QsPO9REGbHS2KHbx5UFah7bNglZj4hLtjKbSzJXExhNPNrNGS0o/RBmXz2arsZGA26gLZ3EIk5hbgGDiQyirh5H5N1G6B93VOoUNH16Kjjz15Q7B1+o77ZjBdF/SYXc8pbEP4EGDE8qNuqLL0lW7tT+Qbpc7bzTMZACi1jcuW90/tfsiFjo/kIV26R/LS8zcRYJfmzbshhdh8Ozmi727n1YjZvaQaawW/jno69P+2PoVcVD7wg0urdLb8wP6A+QbP7cpDxwQclGqdMIh16+j+V0CnTfAfR092sE+v47KQ2HG4Bl1k75/Jey0BY1mP80Omlz7UdIGrS9uuNLIvvByYkOyN3DwGmhkRgFYYAMYMMbNBmrgi2pTtOrkB1ZOuB9XDcFYIF63rzC7L8i+vdULL2hyFinaRn/sh7VNXm9mZPo+1Cos4bf4rk8xjozMNnrzmzhTHlpd96Kev1FeDbSV4mtYAdjBIzNJtjmEwNLT7Iw9aPcsEumRK3t3MbLJEiOCUoA2Zh4WuA6k1wi1msLu7BzwG3MyxYQ6osNrtDv4e9pdCRqXXQjJbCF8U8tnIRRADBiu+wnWZbbCSMqj/2YPyjvKXPBRCMQ/A6gLSG/yvchIZ9MKG9BN5LtVQ2VtQtDvXWh6x9cQVTDOZhIPKwlVv9AcrFwgRxYyZQ4XRHZI+w6rZVs3KcUlzoTFsGpwpVScXTd1BJ/qcyb+0sBTDtlKskd3bPLgueYB1bIc/ztj9hVNb//oO+ggbH6UjyQa3Ib657in3e9aVtGny7IbwGQufhr/zZYYFX+8X/8fd/CsFIb3ngb9TvRH6WhhYzY2dbv0Q7zMVM/6gMw1TqOaUJRR81fnHi6T++/vrYSv4g6KFO0d1lt/01a66tp0IqkKBLGbwFTik+rMCsC8JVOGA/xaJmbEflholV14fCjoOfsADc1rDvoy5/5DtraanCxOKfWiQa9Cv9+xlfLzjCK7KJR/EIqx/5lSKWEa+AguwMPFqtBcRG1VOModzBjh9Czenq0NhM4e41ZM0jCjXAh9QvTgpcb7JV6dw4UNE9xwAhqxnUi+UqbspfZ1Gpa8J4sS+DME4/c65fN4f4S1CnZ/srfGqwyAdZPh3d9lxq0XwVizfDfV0xVsQAVfQxAw2fy0emIvJYReTOxH8or2blWfMik6OJWNncP8QuR6H5shZ0zYNmEPCAiURw2PSLieIpgVv6Es5D0XfSa36q6zbSOMKzO2Cs3eNAE3ZRBxzyc8MDupaBTnhEMpCvbPbVXAn/CntzYHoe9sxqlgvitKhbZAzyN6h6C+kXDS12+t+4RYeBff1gcdiOCVY+adDgp/xE74Sj/M8SKIiRLSJFpl13YznJ0JctxgPXLqKN3gBEMh8w9v6nYDmNHaEZAv9ZV+GviblCDKU+WKhjLNzBDozglL/NH1EIUlSsamxNkaKSMw8QpQ40ExP+L7DujTVLOVy4Npj/0cvCU8MLzmMbJItUy4sUtvQP0PVByUSdZLAyWz/Y+nJlvyjfonB1vtcrtTIzFVbWot8Wd0jfP7y32P0xSPxPjeRTiqzHKzhhCydyI2oP7BA6pGK/0Y6C5+IMHpe7LH06QWvIw2usxVDVJj9/ft8noedHyMK6eKuFEuHmIdVITZV+U7i7aZcsJyfhr59xryRN/0fFVX33UrQBnSDUionYCf5uSmR6Uj2cvss82KHDLFkDMIFrDcCUf6NCTW+frfoulZj5Zz4HyoPEU5kPoIjh0t32NUJiUmdCAPWR0y/cxvUCO3L0UPAkXmebSgNUQwHDVXW+VZ5yzNcvzVDJC+ah28H+0PirVEBOTLx9Ad+qjrlk8NOc1nJtororWdvgTno3e3+ZoUcxxRmLy5MG0OpWxciI/lt7qtshcvqFp1QcvHf7fDXHuJ3qN7GbNS8JLWpGHn3ViD8i09ZcuBNxyvakLKgpr+RI6J0+BfB0iAXRuE0Ec2EXnMlsCZnC232urzW1G0u2ER50J7FRWqhrfppOmqs7f29GKmBnTiirTlvdCW9l8dr6FWaawaiagk9zFOEf46X+W3VhHLCcLWfRd2FyQTmtCihtxgToJOTHETtuFt/LFef");
        features2.put("372925199101248316","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");
        features2.put("410224199304164653","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");
        features2.put("411423199003296084","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");
        features2.put("411481199008176974","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");
        features2.put("411723199612109092","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");
        features2.put("220182199106114148","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");
        features2.put("412825199305016792","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");

        for (String s : map.keySet()) {
            String id = s;
            String name = map.get(id);
            System.out.println("姓名："+name);

            List<byte[]> photo = getPhoto(name);
            for (byte[] bytes : photo) {


                String s1 = new String(bytes);
                //System.out.println(s1);
                StringBuilder stringBuilder = new StringBuilder();
                stringBuilder.append("{").append("\"ywlsh\":\"").append(id).append("\",\"zp\":\"").append(s1).append("\",\"feature\":\"")
                        .append(features1.get(s)).append("\",\"version\":\"1.0\",\"product_name\":\"FACE\"}");
                String json = stringBuilder.toString();
                //System.out.println(json);
                post(json,URL);
                //System.exit(0);
            }


        }


    }


    public static String sendGet(String url, String param) {
        String result = "";
        BufferedReader in = null;
        try {
            String urlNameString = url + "?" + param;
            URL realUrl = new URL(urlNameString);
            // 打开和URL之间的连接
            URLConnection connection = realUrl.openConnection();
            // 设置通用的请求属性
            connection.setRequestProperty("accept", "*/*");
            connection.setRequestProperty("connection", "Keep-Alive");
            connection.setRequestProperty("user-agent",
                    "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)");
            // 建立实际的连接
            connection.connect();
            // 获取所有响应头字段
            Map<String, List<String>> map = connection.getHeaderFields();
            // 遍历所有的响应头字段
            for (String key : map.keySet()) {
                System.out.println(key + "--->" + map.get(key));
            }
            // 定义 BufferedReader输入流来读取URL的响应
            in = new BufferedReader(new InputStreamReader(
                    connection.getInputStream()));
            String line;
            while ((line = in.readLine()) != null) {
                result += line;
            }
        } catch (Exception e) {
            System.out.println("发送GET请求出现异常！" + e);
            e.printStackTrace();
        }
        // 使用finally块来关闭输入流
        finally {
            try {
                if (in != null) {
                    in.close();
                }
            } catch (Exception e2) {
                e2.printStackTrace();
            }
        }
        return result;
    }

    /**
     * 向指定 URL 发送POST方法的请求
     *
     * @param url   发送请求的 URL
     * @param param 请求参数，请求参数应该是 name1=value1&name2=value2 的形式。
     * @return 所代表远程资源的响应结果
     */
    public static String sendPost(String url, String param) {
        PrintWriter out = null;
        BufferedReader in = null;
        String result = "";
        try {
            URL realUrl = new URL(url);
            // 打开和URL之间的连接
            URLConnection conn = realUrl.openConnection();
            // 设置通用的请求属性
            conn.setRequestProperty("accept", "*/*");
            conn.setRequestProperty("connection", "Keep-Alive");
            conn.setRequestProperty("user-agent",
                    "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)");
            // 发送POST请求必须设置如下两行
            conn.setDoOutput(true);
            conn.setDoInput(true);
            // 获取URLConnection对象对应的输出流
            out = new PrintWriter(conn.getOutputStream());
            // 发送请求参数
            out.print(param);
            // flush输出流的缓冲
            out.flush();
            // 定义BufferedReader输入流来读取URL的响应
            in = new BufferedReader(
                    new InputStreamReader(conn.getInputStream()));
            String line;
            while ((line = in.readLine()) != null) {
                result += line;
            }
        } catch (Exception e) {
            System.out.println("发送 POST 请求出现异常！" + e);
            e.printStackTrace();
        }
        //使用finally块来关闭输出流、输入流
        finally {
            try {
                if (out != null) {
                    out.close();
                }
                if (in != null) {
                    in.close();
                }
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        return result;
    }

    public static String post(String json,String URL) {

        HttpClient client = new DefaultHttpClient();
        HttpPost post = new HttpPost(URL);
        post.setHeader("Content-Type", "application/json");
        post.addHeader("Authorization", "Basic YWRtaW46");

        String result = "";

        try {

            StringEntity s = new StringEntity(json, "utf-8");
            s.setContentEncoding(new BasicHeader(HTTP.CONTENT_TYPE,
                    "application/json"));
            post.setEntity(s);

            // 发送请求
            HttpResponse httpResponse = client.execute(post);

            // 获取响应输入流
            InputStream inStream = httpResponse.getEntity().getContent();
            BufferedReader reader = new BufferedReader(new InputStreamReader(
                    inStream, "utf-8"));
            StringBuilder strber = new StringBuilder();
            String line = null;
            while ((line = reader.readLine()) != null)
                strber.append(line + "\n");
            inStream.close();

            result = strber.toString();
            System.out.println(result);

            if (httpResponse.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {
                //System.out.println("请求服务器成功，做相应处理");
            } else {
                System.out.println("请求服务端失败");
            }


        } catch (Exception e) {
            System.out.println("请求异常");
            throw new RuntimeException(e);
        }

        return result;
    }

    public static List<byte[]> getPhoto(String name) throws IOException {

        File file = new File(path);

        File[] files = file.listFiles();

        List<byte[]> photos = new ArrayList<>();

        for (File file1 : files) {

            if (file1.getName().startsWith(name) && file1.getName().endsWith("bmp")) {


                File photoFile = new File(path + "\\" + file1.getName());

                byte[] data = getContent(photoFile);

                //System.out.println(data.toString());
                byte[] encode = Base64.encode(data);
                //System.out.println(encode.toString());
                photos.add(encode);
                System.out.print(file1.getName()+"\t|");
            }

            if (file1.getName().startsWith(name) && file1.getName().endsWith("txt")) {
                int length = (int) file1.length();
                byte[] data = new byte[length];
                new FileInputStream(file1).read(data);
                //byte[] encode = Base64.encode(data);
                //System.out.println(data.toString());
                photos.add(data);
                System.out.print(file1.getName()+"\t|");
            }
        }
        System.out.println();
        return photos;
    }

    public static byte[] getContent(File file) throws IOException {
/*//        File file = new File(filePath);
        if (!file.exists() || !file.isFile())
            return null;

        FileInputStream fis = new FileInputStream(file);

        ByteArrayOutputStream baos = new ByteArrayOutputStream();

        byte[] buffer = new byte[1024 * 1];
        for (int length = fis.read(buffer); length > 0; length = fis.read(buffer))
            baos.write(buffer, 0, length);
        baos.flush();

        byte[] bytes = baos.toByteArray();

        close(baos);
        close(fis);*/

        FileInputStream is = new FileInputStream(file);
        long length = file.length();
        byte[] idImgBytes = new byte[(int) length];
        is.read(idImgBytes);
        is.close();

        return idImgBytes;

    }
    public static void write(byte[] data, String name) throws IOException {
        FileOutputStream fos = new FileOutputStream(name);
        fos.write(data);
        fos.flush();
        close(fos);
    }

    public static void close(Closeable closeable) {
        if (closeable == null)
            return;

        try {
            closeable.close();
        } catch (IOException e) {

        }
    }

}
